#!/usr/bin/python
#-*- encoding: utf8 -*-

from nugsl.nporip import npoRip
import libxml2
import os,sys
import csv
import re
from cPickle import Pickler,Unpickler

def filt( arg ):
    r = re.match('.*?([0-9]+).*',arg)
    return r.group(1)

target = os.path.splitext( os.path.split( sys.argv[0] )[1][6:] )[0]

cwd = os.getcwd()

csvdir = cwd + '/financials/csv/'
tmpdir = cwd + '/financials/tmp/' + target + '/'
pdfdir = cwd + '/financials/pdf/' + target + '/'
statedir = cwd + '/financials/state/' + target + '/'
ppmdir = cwd + '/financials/ppm/' + target + '/'
stoplistdir = cwd + '/financials/stoplist/'

stoplist = stoplistdir + target + '.txt'

for item in [csvdir, tmpdir, pdfdir, statedir, ppmdir, stoplistdir]:
    try:
        os.makedirs( item )
    except:
        pass

# Get list of orgs already processed
state = []
try:
    if os.path.exists( statedir  + 'processed.pickle'):
        ifhp = open( statedir + 'processed.pickle' )
        unpickler = Unpickler( ifhp )
        state = unpickler.load()
        ifhp.close()
except:
    print 'Failed to acquire state list'
        
# Get the manually maintained stoplist, if available
if os.path.exists( stoplist ):
    stoplist = open( stoplist ).read().strip()
    stoplist = stoplist.split('\n')

# Read CSV, and pop orgs with failed reads from list
killme = False
if os.path.exists( csvdir + target + '.csv'):
    ifhcr = open( csvdir + target + '.csv')
    csvreader = csv.reader( ifhcr )
    ifhcw = open( csvdir + target + '.csv.new', 'w+')
    csvwriter = csv.writer( ifhcw )
    seen = []
    for line in csvreader:
        if ' ' in line[0]:
            continue
        if int( line[1] ) == -1:
            if line[0] in [x for x in state]:
                print 'Failed OCR: %s' % line[0]
                killme = True
                if len( sys.argv) > 1 and sys.argv[1] == '--force':
                    state.remove( line[0] )
                    killme = False
                else:
                    seen.append( line[0] )
                    csvwriter.writerow( line )
            else:
                seen.append( line[0] )
                csvwriter.writerow( line )
        else:
            seen.append( line[0] )
            csvwriter.writerow( line )
    ifhcr.close()
    ifhcw.close()
    os.unlink( csvdir + target + '.csv')
    os.rename( csvdir + target + '.csv.new',csvdir + target + '.csv')

# Protect against cruft in the list of processed orgs
for pos in range(len(state)-1,-1,-1):
    stateitem = state[pos]
    if not stateitem in seen:
        state.remove( stateitem )
    
if killme:
    # Make persistent record of processed file name (bad c&p from below)
    ofhp = open( statedir + 'processed.pickle', 'w+')
    pickler = Pickler( ofhp )
    pickler.dump( state )
    ofhp.close()
    sys.exit()

# Open CSV file for writing
ofhc = open( csvdir + target + '.csv', 'a')
csv = csv.writer( ofhc )

### Site-specific code
    
np = npoRip()

orgs = []

if os.path.exists( statedir  + 'index.pickle'):
    ifhp = open( statedir + 'index.pickle' )
    unpickler = Unpickler( ifhp )
    orgs = unpickler.load()
    ifhp.close()
else:
  for f in os.listdir( pdfdir ):
      orgs.append( os.path.splitext(f)[0] ) 

  ofhp = open( statedir + 'index.pickle', 'w+')
  pickler = Pickler( ofhp )
  pickler.dump( orgs )
  ofhp.close()
        
count = 0
            
for org in orgs:
    orgname = org
    orgname = np.sanitize( orgname )

    count += 1
    
    # Don't want to be bothered with shit we've put in the stoplist
    if orgname in stoplist:
        print '%d: STOP!  STOP!  %s' % (count, orgname)
        continue
    
    if orgname in state:
        print '%d: Done: %s' % (count, orgname)
        continue
    
    ### Standard code below
        
    # Clear out working directory
    for f in os.listdir(tmpdir):
        os.unlink(tmpdir + f)
        
    ### Standard code above

    # Fetch one PDF file
    print '%d: %s' % (count, orgname)
    sys.stdout.write('v')
    sys.stdout.flush()
    pdf = open( pdfdir + org + '.pdf' ).read()
    
    ofhp = open(tmpdir + orgname + '.pdf','w+')
    ofhp.write( pdf )
    ofhp.close()
    sys.stdout.write('_')
    sys.stdout.flush()

    ### Standard code below
    
    # OCR magic
    expenditure,ppms = np.pdf2gocr( tmpdir + orgname + '.pdf')    
    csv.writerow( [orgname, expenditure] )

    ofh = open( ppmdir + target + '.txt', 'a')
    for ppm in ppms:
        ofh.write( ppm + '\n' )
        os.unlink( tmpdir + ppm )
    ofh.close()

    # Tidy up
    os.rename(tmpdir + orgname + '.pdf', pdfdir + orgname + '.pdf')
    
    # Make persistent record of processed file name
    state.append( orgname )
    ofhp = open( statedir + 'processed.pickle', 'w+')
    pickler = Pickler( ofhp )
    pickler.dump( state )
    ofhp.close()
